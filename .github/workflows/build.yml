name: Android Build

on:
  push:
    branches:
      - master

env:
  COMMIT_ID: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup ENVIRONMENT variables
        run: |
          if [[ ${{ github.event_name }} == 'push' ]]; then
            if [[ "${{ github.event.head_commit.message }}" == '[release]*' ]]; then
              export BUILD_VERSION="release"
            else
              export BUILD_VERSION="${{ github.sha }}"
            fi
            export COMMIT_ID="${{ github.sha }}"
          fi

      - name: Extract release version from commit message
        run: |
          commit_message=$(git log --format=%B -n 1 $GITHUB_SHA)
          if [[ $commit_message =~ \[release=([0-9]+)\.([0-9]+)\.([0-9]+)\] ]]; then
            export RELEASE_VERSION="${BASH_REMATCH[1]}.${BASH_REMATCH[2]}.${BASH_REMATCH[3]}"
            echo RELEASE_VERSION
          fi

      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Grant permission
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew build

      - name: Compile apk & aab
        run: |
          ./gradlew assembleRelease
          ./gradlew bundleRelease

      - name: Sign apks
        uses: kevin-david/zipalign-sign-android-release@v1.1
        with:
          releaseDirectory: app/build/outputs/apk/release
          signingKeyBase64: ${{ secrets.SIGNING_KEY }}
          alias: ${{ secrets.ALIAS }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}
          zipAlign: true
        env:
          BUILD_TOOLS_VERSION: "33.0.0"

      - name: Relocate outputs
        run: |
          mkdir outputs
          mv app/build/outputs/apk/release/*.apk outputs/
          mv app/build/outputs/bundle/release/*.aab outputs/
          mv outputs/app-release-unsigned-signed.apk outputs/app-release.apk

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: esjzone
          path: outputs/*
      - name: Create release
        if: ${{ env.RELEASE_VERSION == '' }}
        uses: marvinpinto/action-automatic-releases@latest
        with:
          title: "Esjzone v${{ env.RELEASE_VERSION }}"
          automatic_release_tag: "v${{ env.RELEASE_VERSION }}"
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          files: "outputs/*"
          prerelease: false